services:
  n5teachleadpermissions:
    build:
      context: .
      dockerfile: /N5TeachLead/Dockerfile
    ports:
       - "8080:8080"
       - "8081:8081"
    depends_on:
       - sqlserver
       - elasticsearch
       - kibana
       - kafka 
    environment:
       - ASPNETCORE_ENVIRONMENT=Developement
       - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
       - ASPNETCORE_HTTPS_PORT=8081
       - ASPNETCORE_Kestrel__Certificates__Default__Password=felipe
       - ASPNETCORE_Kestrel__Certificates__Default__Path=../home/app/.aspnet/https/aspnetapp.pfx
    volumes:
      - ${USERPROFILE}\.aspnet\https:/root/.aspnet/https
    networks:
       - permissionnetwork
    user: root
    command: ["dotnet", "ef", "database update"] 
    restart: on-failure

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Password12345!"
      ACCEPT_EULA: "Y"
    ports:
       - "1439:1433"
    volumes:
       - sqlvolume:/var/opt/mssql
    networks:
       - permissionnetwork

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.1
    container_name: elasticsearch
    environment:
       - discovery.type=single-node
       - ES_JAVA_OPTS=-Xms512m -Xmx512m
       - xpack.security.enabled=false
    ports:
       - "9200:9200"
       - "9300:9300"
    volumes:
       - esdata:/usr/share/elasticsearch/data
    networks:
       - permissionnetwork

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.1
    container_name: kibana
    environment: 
       - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
       - "5601:5601"
    networks:
       - permissionnetwork
    depends_on:
       - elasticsearch
  
  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
       - permissionnetwork

  # reachable on 9092 from the host and on 29092 from inside docker compose
  kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    expose:
      - '29092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_MIN_INSYNC_REPLICAS: '1'
    networks:
      - permissionnetwork

  init-kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics.sh --create --topic permission --bootstrap-server localhost:29092 --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "
    networks:
      - permissionnetwork

networks:
  permissionnetwork:
    driver: bridge

volumes:
  sqlvolume:
  esdata:
    driver: local  